{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_actorID",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_serviceName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_servicePurpose",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_operation",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "_personalData",
						"type": "string[]"
					}
				],
				"name": "addDataUsage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dataUsages",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "actorID",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "serviceName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "servicePurpose",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "operation",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getPurposeHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Store and retrieve user data usage details",
			"kind": "dev",
			"methods": {
				"addDataUsage(uint256,string,string,string,string[])": {
					"details": "Store a new data usage in the contract",
					"params": {
						"_actorID": "The actor's unique identifier",
						"_operation": "The type of operation performed on the data",
						"_personalData": "The list of personal data items",
						"_serviceName": "The name of the service processing data",
						"_servicePurpose": "The purpose for processing the data"
					}
				},
				"getPurposeHash(uint256)": {
					"details": "Retrieve a hash of the service purpose and actor ID",
					"params": {
						"index": "The index of the data usage entry in the array"
					},
					"returns": {
						"_0": "The keccak256 hash of the actorID and serviceName"
					}
				}
			},
			"title": "Data Usage Smart Contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/DataUsageSmartContract.sol": "DataUsageSmartContract"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/DataUsageSmartContract.sol": {
			"keccak256": "0x0eb1cde668a1dd4876a0a53b85c94bfee1222ce41ccf5cd8604cfc66ff45c4ca",
			"license": "MIT",
			"urls": [
				"bzz-raw://21122cde4de5946aea4b56110ea2e24ce250dd3b1cb0eb6d9294754ea6c8d765",
				"dweb:/ipfs/QmeWWDuD313dUsVPuWKY8CHvVC45Mc6kWcrNH8jvTtFnaF"
			]
		}
	},
	"version": 1
}