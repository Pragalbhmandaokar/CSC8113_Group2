{
	"id": "1a8e729566081cd9b0c5ad6098eddd52",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AgreementSmartContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract AgreementSmartContract {\n\n    // Struct\n    struct Consent {\n        address purposeBlockAddress;                 // the address of the DataUsageSmartContract after deployed into public blockchain\n        bytes32 purposeHashKeyOfDataUsage;           // Hash key of the data usage entry, Key of mapHashDataUsage = hash value of the properties in one data usage record\n        uint userId;                                 // ID of the user\n        bool isConsented;                            // the user's given consent (positive == true / negative == false)\n    }\n\n    // Mapping to store consents keyed by a hash\n    mapping(bytes32 => Consent) public mapHashConsent;\n\n    // Event emitted when a new consent is added\n    event ConsentAdded(bytes32 hashOfConsent);\n\n    // Function to add a new consent record and return the hash of the consent\n    function addConsent(\n        address _purposeBlockAddress,\n        bytes32 _purposeHashKeyOfDataUsage,\n        uint _userId,\n        bool _isConsented\n    ) public returns (bytes32) {\n        // Generate the hash for the new consent\n        bytes32 hashOfConsent = keccak256(\n            abi.encodePacked(_purposeBlockAddress, _purposeHashKeyOfDataUsage, _userId, _isConsented)\n        );\n\n        // Ensure the consent is unique and doesn't already exist\n        require(\n            mapHashConsent[hashOfConsent].userId == 0,\n            \"A consent record with this hash already exists.\"\n        );\n\n        // Create and store the new consent\n        mapHashConsent[hashOfConsent] = Consent({\n            purposeBlockAddress: _purposeBlockAddress,\n            purposeHashKeyOfDataUsage: _purposeHashKeyOfDataUsage,\n            userId: _userId,\n            isConsented: _isConsented\n        });\n\n        // Emit an event for the new consent\n        emit ConsentAdded(hashOfConsent);\n\n        // Return the hash of the new consent\n        return hashOfConsent;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/AgreementSmartContract.sol": {
				"AgreementSmartContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "hashOfConsent",
									"type": "bytes32"
								}
							],
							"name": "ConsentAdded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_purposeBlockAddress",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_purposeHashKeyOfDataUsage",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_isConsented",
									"type": "bool"
								}
							],
							"name": "addConsent",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "mapHashConsent",
							"outputs": [
								{
									"internalType": "address",
									"name": "purposeBlockAddress",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "purposeHashKeyOfDataUsage",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isConsented",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AgreementSmartContract.sol\":58:1986  contract AgreementSmartContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AgreementSmartContract.sol\":58:1986  contract AgreementSmartContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1fb922d5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6f0fa36d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AgreementSmartContract.sol\":685:734  mapping(bytes32 => Consent) public mapHashConsent */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup5\n      jump\n    tag_5:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":442:474   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":424:475   */\n      dup6\n      mstore\n        /* \"#utility.yul\":506:508   */\n      0x20\n        /* \"#utility.yul\":491:509   */\n      dup6\n      add\n        /* \"#utility.yul\":484:518   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":534:552   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":527:561   */\n      mstore\n        /* \"#utility.yul\":604:618   */\n      iszero\n        /* \"#utility.yul\":597:619   */\n      iszero\n        /* \"#utility.yul\":592:594   */\n      0x60\n        /* \"#utility.yul\":577:595   */\n      dup3\n      add\n        /* \"#utility.yul\":570:620   */\n      mstore\n        /* \"#utility.yul\":411:414   */\n      0x80\n        /* \"#utility.yul\":396:415   */\n      add\n        /* \"contracts/AgreementSmartContract.sol\":685:734  mapping(bytes32 => Consent) public mapHashConsent */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AgreementSmartContract.sol\":917:1984  function addConsent(... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":1374:1399   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1362:1364   */\n      0x20\n        /* \"#utility.yul\":1347:1365   */\n      add\n        /* \"contracts/AgreementSmartContract.sol\":917:1984  function addConsent(... */\n      tag_9\n        /* \"#utility.yul\":1228:1405   */\n      jump\n        /* \"contracts/AgreementSmartContract.sol\":917:1984  function addConsent(... */\n    tag_14:\n        /* \"contracts/AgreementSmartContract.sol\":1205:1294  abi.encodePacked(_purposeBlockAddress, _purposeHashKeyOfDataUsage, _userId, _isConsented) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":1637:1639   */\n      0x60\n        /* \"#utility.yul\":1633:1648   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":1629:1682   */\n      and\n        /* \"contracts/AgreementSmartContract.sol\":1205:1294  abi.encodePacked(_purposeBlockAddress, _purposeHashKeyOfDataUsage, _userId, _isConsented) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":1617:1683   */\n      mstore\n        /* \"#utility.yul\":1699:1711   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":1692:1720   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":1736:1748   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":1729:1757   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1803:1817   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1796:1818   */\n      iszero\n        /* \"#utility.yul\":1791:1794   */\n      0xf8\n        /* \"#utility.yul\":1787:1819   */\n      shl\n        /* \"#utility.yul\":1773:1785   */\n      0x74\n      dup3\n      add\n        /* \"#utility.yul\":1766:1820   */\n      mstore\n        /* \"contracts/AgreementSmartContract.sol\":1090:1097  bytes32 */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"#utility.yul\":1836:1848   */\n      0x75\n      add\n        /* \"contracts/AgreementSmartContract.sol\":1205:1294  abi.encodePacked(_purposeBlockAddress, _purposeHashKeyOfDataUsage, _userId, _isConsented) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"contracts/AgreementSmartContract.sol\":1182:1304  keccak256(... */\n      dup2\n      mload\n        /* \"contracts/AgreementSmartContract.sol\":1205:1294  abi.encodePacked(_purposeBlockAddress, _purposeHashKeyOfDataUsage, _userId, _isConsented) */\n      0x20\n        /* \"contracts/AgreementSmartContract.sol\":1182:1304  keccak256(... */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"contracts/AgreementSmartContract.sol\":1402:1416  mapHashConsent */\n      0x00\n        /* \"contracts/AgreementSmartContract.sol\":1402:1431  mapHashConsent[hashOfConsent] */\n      dup2\n      dup2\n      mstore\n      swap3\n      dup4\n      swap1\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/AgreementSmartContract.sol\":1402:1438  mapHashConsent[hashOfConsent].userId */\n      0x02\n      add\n      sload\n        /* \"contracts/AgreementSmartContract.sol\":1182:1304  keccak256(... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/AgreementSmartContract.sol\":1402:1443  mapHashConsent[hashOfConsent].userId == 0 */\n      iszero\n        /* \"contracts/AgreementSmartContract.sol\":1381:1516  require(... */\n      tag_20\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"contracts/AgreementSmartContract.sol\":1381:1516  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2043:2064   */\n      mstore\n        /* \"#utility.yul\":2100:2102   */\n      0x2f\n        /* \"#utility.yul\":2080:2098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2073:2103   */\n      mstore\n        /* \"#utility.yul\":2139:2173   */\n      0x4120636f6e73656e74207265636f726420776974682074686973206861736820\n        /* \"#utility.yul\":2119:2137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2112:2174   */\n      mstore\n      shl(0x89, 0x30b63932b0b23c9032bc34b9ba3997)\n        /* \"#utility.yul\":2190:2208   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2183:2228   */\n      mstore\n        /* \"#utility.yul\":2245:2264   */\n      0x84\n      add\n        /* \"contracts/AgreementSmartContract.sol\":1381:1516  require(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/AgreementSmartContract.sol\":1603:1812  Consent({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup10\n      dup2\n      mstore\n      dup4\n      dup6\n      add\n      dup10\n      dup2\n      mstore\n      dup9\n      iszero\n      iszero\n      0x60\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n        /* \"contracts/AgreementSmartContract.sol\":1571:1600  mapHashConsent[hashOfConsent] */\n      dup9\n      dup2\n      mstore\n      dup1\n      dup6\n      mstore\n      dup8\n      swap1\n      keccak256\n        /* \"contracts/AgreementSmartContract.sol\":1571:1812  mapHashConsent[hashOfConsent] = Consent({... */\n      swap6\n      mload\n      dup7\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      dup6\n      sstore\n      swap1\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      swap1\n      mload\n      0x03\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/AgreementSmartContract.sol\":1873:1900  ConsentAdded(hashOfConsent) */\n      swap1\n      mload\n        /* \"#utility.yul\":1374:1399   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/AgreementSmartContract.sol\":1873:1900  ConsentAdded(hashOfConsent) */\n      0xd501d8d86c39bdd6c1d5e201185e79a5cae0d1fd7c4c8835833f8449e4111d19\n      swap2\n        /* \"#utility.yul\":1347:1365   */\n      add\n        /* \"contracts/AgreementSmartContract.sol\":1873:1900  ConsentAdded(hashOfConsent) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AgreementSmartContract.sol\":1964:1977  hashOfConsent */\n      swap6\n        /* \"contracts/AgreementSmartContract.sol\":917:1984  function addConsent(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_26:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:1223   */\n    tag_13:\n        /* \"#utility.yul\":714:720   */\n      0x00\n        /* \"#utility.yul\":722:728   */\n      dup1\n        /* \"#utility.yul\":730:736   */\n      0x00\n        /* \"#utility.yul\":738:744   */\n      dup1\n        /* \"#utility.yul\":791:794   */\n      0x80\n        /* \"#utility.yul\":779:788   */\n      dup6\n        /* \"#utility.yul\":770:777   */\n      dup8\n        /* \"#utility.yul\":766:789   */\n      sub\n        /* \"#utility.yul\":762:795   */\n      slt\n        /* \"#utility.yul\":759:812   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":759:812   */\n    tag_29:\n        /* \"#utility.yul\":834:857   */\n      dup5\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":886:917   */\n      dup2\n      and\n        /* \"#utility.yul\":876:918   */\n      dup2\n      eq\n        /* \"#utility.yul\":866:936   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":932:933   */\n      0x00\n        /* \"#utility.yul\":929:930   */\n      dup1\n        /* \"#utility.yul\":922:934   */\n      revert\n        /* \"#utility.yul\":866:936   */\n    tag_30:\n        /* \"#utility.yul\":955:960   */\n      swap4\n      pop\n        /* \"#utility.yul\":1007:1009   */\n      0x20\n        /* \"#utility.yul\":992:1010   */\n      dup6\n      add\n        /* \"#utility.yul\":979:1011   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1058:1060   */\n      0x40\n        /* \"#utility.yul\":1043:1061   */\n      dup6\n      add\n        /* \"#utility.yul\":1030:1062   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1114:1116   */\n      0x60\n        /* \"#utility.yul\":1099:1117   */\n      dup6\n      add\n        /* \"#utility.yul\":1086:1118   */\n      calldataload\n        /* \"#utility.yul\":1156:1171   */\n      dup1\n      iszero\n        /* \"#utility.yul\":1149:1172   */\n      iszero\n        /* \"#utility.yul\":1137:1173   */\n      dup2\n      eq\n        /* \"#utility.yul\":1127:1191   */\n      tag_31\n      jumpi\n        /* \"#utility.yul\":1187:1188   */\n      0x00\n        /* \"#utility.yul\":1184:1185   */\n      dup1\n        /* \"#utility.yul\":1177:1189   */\n      revert\n        /* \"#utility.yul\":1127:1191   */\n    tag_31:\n        /* \"#utility.yul\":631:1223   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122002c1eac20247c2c96e2af7e2f9bf4bf3b91b0a1dc955c875a6f5883902ed39bc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102e88061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80631fb922d5146100385780636f0fa36d146100aa575b5f80fd5b610079610046366004610245565b5f6020819052908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080015b60405180910390f35b6100bd6100b836600461025c565b6100cb565b6040519081526020016100a1565b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526054810183905281151560f81b60748201525f90819060750160408051601f1981840301815291815281516020928301205f81815292839052912060020154909150156101995760405162461bcd60e51b815260206004820152602f60248201527f4120636f6e73656e74207265636f72642077697468207468697320686173682060448201526e30b63932b0b23c9032bc34b9ba399760891b606482015260840160405180910390fd5b604080516080810182526001600160a01b0388811682526020808301898152838501898152881515606086019081525f888152808552879020955186546001600160a01b03191695169490941785559051600185015551600284015590516003909201805460ff19169215159290921790915590518281527fd501d8d86c39bdd6c1d5e201185e79a5cae0d1fd7c4c8835833f8449e4111d19910160405180910390a195945050505050565b5f60208284031215610255575f80fd5b5035919050565b5f805f806080858703121561026f575f80fd5b84356001600160a01b0381168114610285575f80fd5b93506020850135925060408501359150606085013580151581146102a7575f80fd5b93969295509093505056fea264697066735822122002c1eac20247c2c96e2af7e2f9bf4bf3b91b0a1dc955c875a6f5883902ed39bc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FB922D5 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x6F0FA36D EQ PUSH2 0xAA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0x46 CALLDATASIZE PUSH1 0x4 PUSH2 0x245 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25C JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 ISZERO ISZERO PUSH1 0xF8 SHL PUSH1 0x74 DUP3 ADD MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE SWAP3 DUP4 SWAP1 MSTORE SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4120636F6E73656E74207265636F726420776974682074686973206861736820 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x30B63932B0B23C9032BC34B9BA3997 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP10 DUP2 MSTORE DUP4 DUP6 ADD DUP10 DUP2 MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH0 DUP9 DUP2 MSTORE DUP1 DUP6 MSTORE DUP8 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP6 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xD501D8D86C39BDD6C1D5E201185E79A5CAE0D1FD7C4C8835833F8449E4111D19 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x285 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xC1 0xEA 0xC2 MUL SELFBALANCE 0xC2 0xC9 PUSH15 0x2AF7E2F9BF4BF3B91B0A1DC955C875 0xA6 CREATE2 DUP9 CODECOPY MUL 0xED CODECOPY 0xBC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:1928:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addConsent_72": {
									"entryPoint": 203,
									"id": 72,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@mapHashConsent_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_bytes32t_uint256t_bool": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9024ef7eaf1f06fee486e50eb44e29366f01ec28366b06eeaf24c0116fa7d7c3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2272:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "388:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "431:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "446:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "462:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "467:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "458:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "458:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "471:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "442:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "424:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "506:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "491:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "484:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "484:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "534:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "554:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "527:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "581:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "592:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "611:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "604:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "604:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "597:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "597:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "323:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "334:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "342:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "350:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "358:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "369:4:1",
														"type": ""
													}
												],
												"src": "199:427:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:474:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "796:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "805:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "808:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "770:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "779:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:33:1"
															},
															"nodeType": "YulIf",
															"src": "759:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "821:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "847:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "834:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "920:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "932:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "922:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "922:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "922:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "879:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "890:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "905:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "910:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "901:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "901:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "914:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "897:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "897:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "886:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "886:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "876:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "876:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:50:1"
															},
															"nodeType": "YulIf",
															"src": "866:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "945:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "955:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "945:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "969:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "996:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1007:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "992:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "979:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "969:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1047:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1058:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1043:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1043:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1030:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1071:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1114:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1086:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1075:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1175:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1177:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1177:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1177:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "1140:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nodeType": "YulIdentifier",
																								"src": "1163:7:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1156:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1156:15:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1149:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1149:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:36:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:44:1"
															},
															"nodeType": "YulIf",
															"src": "1127:64:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1200:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1210:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "691:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "702:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "714:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "722:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "730:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "738:6:1",
														"type": ""
													}
												],
												"src": "631:592:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1329:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1339:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1339:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1381:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1392:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1374:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1374:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1298:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1309:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1320:4:1",
														"type": ""
													}
												],
												"src": "1228:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:247:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1624:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1637:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1641:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1633:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1633:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1654:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1650:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1650:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1629:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1617:66:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1703:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1708:2:1",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1699:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1713:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1692:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1692:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1740:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1736:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1736:12:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1750:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1777:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1782:2:1",
																				"type": "",
																				"value": "84"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1791:3:1",
																				"type": "",
																				"value": "248"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value3",
																								"nodeType": "YulIdentifier",
																								"src": "1810:6:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1803:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1803:14:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1796:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1796:22:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1766:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1829:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1840:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:2:1",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1829:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1559:3:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1564:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1572:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1580:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1588:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1599:3:1",
														"type": ""
													}
												],
												"src": "1410:444:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2033:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2095:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2080:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2100:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2073:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2073:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2134:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:18:1"
																	},
																	{
																		"hexValue": "4120636f6e73656e74207265636f726420776974682074686973206861736820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2139:34:1",
																		"type": "",
																		"value": "A consent record with this hash "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2194:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2205:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2190:18:1"
																	},
																	{
																		"hexValue": "616c7265616479206578697374732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2210:17:1",
																		"type": "",
																		"value": "already exists."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2237:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2249:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2260:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2245:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2245:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2237:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9024ef7eaf1f06fee486e50eb44e29366f01ec28366b06eeaf24c0116fa7d7c3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2010:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2024:4:1",
														"type": ""
													}
												],
												"src": "1859:411:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), shl(248, iszero(iszero(value3))))\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_9024ef7eaf1f06fee486e50eb44e29366f01ec28366b06eeaf24c0116fa7d7c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"A consent record with this hash \")\n        mstore(add(headStart, 96), \"already exists.\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80631fb922d5146100385780636f0fa36d146100aa575b5f80fd5b610079610046366004610245565b5f6020819052908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080015b60405180910390f35b6100bd6100b836600461025c565b6100cb565b6040519081526020016100a1565b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526054810183905281151560f81b60748201525f90819060750160408051601f1981840301815291815281516020928301205f81815292839052912060020154909150156101995760405162461bcd60e51b815260206004820152602f60248201527f4120636f6e73656e74207265636f72642077697468207468697320686173682060448201526e30b63932b0b23c9032bc34b9ba399760891b606482015260840160405180910390fd5b604080516080810182526001600160a01b0388811682526020808301898152838501898152881515606086019081525f888152808552879020955186546001600160a01b03191695169490941785559051600185015551600284015590516003909201805460ff19169215159290921790915590518281527fd501d8d86c39bdd6c1d5e201185e79a5cae0d1fd7c4c8835833f8449e4111d19910160405180910390a195945050505050565b5f60208284031215610255575f80fd5b5035919050565b5f805f806080858703121561026f575f80fd5b84356001600160a01b0381168114610285575f80fd5b93506020850135925060408501359150606085013580151581146102a7575f80fd5b93969295509093505056fea264697066735822122002c1eac20247c2c96e2af7e2f9bf4bf3b91b0a1dc955c875a6f5883902ed39bc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FB922D5 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x6F0FA36D EQ PUSH2 0xAA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0x46 CALLDATASIZE PUSH1 0x4 PUSH2 0x245 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25C JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 ISZERO ISZERO PUSH1 0xF8 SHL PUSH1 0x74 DUP3 ADD MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE SWAP3 DUP4 SWAP1 MSTORE SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4120636F6E73656E74207265636F726420776974682074686973206861736820 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x30B63932B0B23C9032BC34B9BA3997 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP10 DUP2 MSTORE DUP4 DUP6 ADD DUP10 DUP2 MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH0 DUP9 DUP2 MSTORE DUP1 DUP6 MSTORE DUP8 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP6 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xD501D8D86C39BDD6C1D5E201185E79A5CAE0D1FD7C4C8835833F8449E4111D19 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x285 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xC1 0xEA 0xC2 MUL SELFBALANCE 0xC2 0xC9 PUSH15 0x2AF7E2F9BF4BF3B91B0A1DC955C875 0xA6 CREATE2 DUP9 CODECOPY MUL 0xED CODECOPY 0xBC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:1928:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;685:49:0;;;;;;;;;;;;;;-1:-1:-1;;;;;442:32:1;;;424:51;;506:2;491:18;;484:34;;;;534:18;;;527:34;604:14;597:22;592:2;577:18;;570:50;411:3;396:19;685:49:0;;;;;;;;917:1067;;;;;;:::i;:::-;;:::i;:::-;;;1374:25:1;;;1362:2;1347:18;917:1067:0;1228:177:1;917:1067:0;1205:89;;-1:-1:-1;;1637:2:1;1633:15;;;1629:53;1205:89:0;;;1617:66:1;1699:12;;;1692:28;;;1736:12;;;1729:28;;;1803:14;;1796:22;1791:3;1787:32;1773:12;;;1766:54;1090:7:0;;;;1836:12:1;;1205:89:0;;;-1:-1:-1;;1205:89:0;;;;;;;;;1182:122;;1205:89;1182:122;;;;1402:14;:29;;;;;;;;;:36;;;1182:122;;-1:-1:-1;1402:41:0;1381:135;;;;-1:-1:-1;;;1381:135:0;;2061:2:1;1381:135:0;;;2043:21:1;2100:2;2080:18;;;2073:30;2139:34;2119:18;;;2112:62;-1:-1:-1;;;2190:18:1;;;2183:45;2245:19;;1381:135:0;;;;;;;;1603:209;;;;;;;;-1:-1:-1;;;;;1603:209:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1571:29:0;;;;;;;;;:241;;;;-1:-1:-1;;;;;;1571:241:0;;;;;;;;;;;-1:-1:-1;1571:241:0;;;;;;;;;;;;;;;;-1:-1:-1;;1571:241:0;;;;;;;;;;;1873:27;;1374:25:1;;;1873:27:0;;1347:18:1;1873:27:0;;;;;;;1964:13;917:1067;-1:-1:-1;;;;;917:1067:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;631:592::-;714:6;722;730;738;791:3;779:9;770:7;766:23;762:33;759:53;;;808:1;805;798:12;759:53;834:23;;-1:-1:-1;;;;;886:31:1;;876:42;;866:70;;932:1;929;922:12;866:70;955:5;-1:-1:-1;1007:2:1;992:18;;979:32;;-1:-1:-1;1058:2:1;1043:18;;1030:32;;-1:-1:-1;1114:2:1;1099:18;;1086:32;1156:15;;1149:23;1137:36;;1127:64;;1187:1;1184;1177:12;1127:64;631:592;;;;-1:-1:-1;631:592:1;;-1:-1:-1;;631:592:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "148800",
								"executionCost": "194",
								"totalCost": "148994"
							},
							"external": {
								"addConsent(address,bytes32,uint256,bool)": "96859",
								"mapHashConsent(bytes32)": "8861"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1986,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002c1eac20247c2c96e2af7e2f9bf4bf3b91b0a1dc955c875a6f5883902ed39bc64736f6c63430008140033",
									".code": [
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "1FB922D5"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "6F0FA36D"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 685,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 442,
											"end": 474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 474,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 442,
											"end": 474,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 424,
											"end": 475,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 424,
											"end": 475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 491,
											"end": 509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 484,
											"end": 518,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 484,
											"end": 518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 484,
											"end": 518,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 484,
											"end": 518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 534,
											"end": 552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 534,
											"end": 552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 534,
											"end": 552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 527,
											"end": 561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 604,
											"end": 618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 597,
											"end": 619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 577,
											"end": 595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 577,
											"end": 595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 411,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 396,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 685,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 734,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 917,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 917,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1228,
											"end": 1405,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1633,
											"end": 1648,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1648,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1711,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1699,
											"end": 1711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1720,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 1787,
											"end": 1819,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1836,
											"end": 1848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1438,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1402,
											"end": 1438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "4120636F6E73656E74207265636F726420776974682074686973206861736820"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C9032BC34B9BA3997"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2264,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2245,
											"end": 2264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "D501D8D86C39BDD6C1D5E201185E79A5CAE0D1FD7C4C8835833F8449E4111D19"
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1984,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 917,
											"end": 1984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 791,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 770,
											"end": 777,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 762,
											"end": 795,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 759,
											"end": 812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 759,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 759,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 834,
											"end": 857,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 886,
											"end": 917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 876,
											"end": 918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 876,
											"end": 918,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 866,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 866,
											"end": 936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 932,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 922,
											"end": 934,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 866,
											"end": 936,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 866,
											"end": 936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 955,
											"end": 960,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1011,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1061,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1062,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1118,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1127,
											"end": 1191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1189,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1191,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1127,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 1223,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 631,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/AgreementSmartContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addConsent(address,bytes32,uint256,bool)": "6f0fa36d",
							"mapHashConsent(bytes32)": "1fb922d5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashOfConsent\",\"type\":\"bytes32\"}],\"name\":\"ConsentAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_purposeBlockAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_purposeHashKeyOfDataUsage\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isConsented\",\"type\":\"bool\"}],\"name\":\"addConsent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"mapHashConsent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"purposeBlockAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"purposeHashKeyOfDataUsage\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isConsented\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AgreementSmartContract.sol\":\"AgreementSmartContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AgreementSmartContract.sol\":{\"keccak256\":\"0xc204bdcbdfbbcbb423771a5a4be57dc3ab1f3fcd512ebf00b88b2cac3586d861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3364f2b1ced6eaf92f6f4dea0de23c60b6e0214e8500669f23884c11ac4deaf\",\"dweb:/ipfs/QmZtGPd6jimanQT1uAHcSdaVo478Nfsfwv3MymHTVvNsXR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "contracts/AgreementSmartContract.sol:AgreementSmartContract",
								"label": "mapHashConsent",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(Consent)10_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(Consent)10_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AgreementSmartContract.Consent)",
								"numberOfBytes": "32",
								"value": "t_struct(Consent)10_storage"
							},
							"t_struct(Consent)10_storage": {
								"encoding": "inplace",
								"label": "struct AgreementSmartContract.Consent",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/AgreementSmartContract.sol:AgreementSmartContract",
										"label": "purposeBlockAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 5,
										"contract": "contracts/AgreementSmartContract.sol:AgreementSmartContract",
										"label": "purposeHashKeyOfDataUsage",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 7,
										"contract": "contracts/AgreementSmartContract.sol:AgreementSmartContract",
										"label": "userId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "contracts/AgreementSmartContract.sol:AgreementSmartContract",
										"label": "isConsented",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/AgreementSmartContract.sol": {
				"ast": {
					"absolutePath": "contracts/AgreementSmartContract.sol",
					"exportedSymbols": {
						"AgreementSmartContract": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AgreementSmartContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "AgreementSmartContract",
							"nameLocation": "67:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AgreementSmartContract.Consent",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "purposeBlockAddress",
											"nameLocation": "144:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "136:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "136:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "purposeHashKeyOfDataUsage",
											"nameLocation": "280:25:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "272:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 4,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "272:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "userId",
											"nameLocation": "447:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "442:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "442:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "isConsented",
											"nameLocation": "518:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "513:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "513:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Consent",
									"nameLocation": "118:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "111:519:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1fb922d5",
									"id": 15,
									"mutability": "mutable",
									"name": "mapHashConsent",
									"nameLocation": "720:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 73,
									"src": "685:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Consent_$10_storage_$",
										"typeString": "mapping(bytes32 => struct AgreementSmartContract.Consent)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 11,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "693:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "685:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Consent_$10_storage_$",
											"typeString": "mapping(bytes32 => struct AgreementSmartContract.Consent)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "Consent",
												"nameLocations": [
													"704:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "704:7:0"
											},
											"referencedDeclaration": 10,
											"src": "704:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Consent_$10_storage_ptr",
												"typeString": "struct AgreementSmartContract.Consent"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d501d8d86c39bdd6c1d5e201185e79a5cae0d1fd7c4c8835833f8449e4111d19",
									"id": 19,
									"name": "ConsentAdded",
									"nameLocation": "796:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "hashOfConsent",
												"nameLocation": "817:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "809:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:23:0"
									},
									"src": "790:42:0"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1099:885:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "hashOfConsent",
														"nameLocation": "1166:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1158:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 32,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 37,
																	"name": "_purposeBlockAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1222:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 38,
																	"name": "_purposeHashKeyOfDataUsage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1244:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 39,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "1272:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 40,
																	"name": "_isConsented",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "1281:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 35,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1205:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1209:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1205:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1205:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 34,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1182:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1182:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1158:146:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 45,
																		"name": "mapHashConsent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1402:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Consent_$10_storage_$",
																			"typeString": "mapping(bytes32 => struct AgreementSmartContract.Consent storage ref)"
																		}
																	},
																	"id": 47,
																	"indexExpression": {
																		"id": 46,
																		"name": "hashOfConsent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "1417:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1402:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Consent_$10_storage",
																		"typeString": "struct AgreementSmartContract.Consent storage ref"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1432:6:0",
																"memberName": "userId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "1402:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1402:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4120636f6e73656e74207265636f726420776974682074686973206861736820616c7265616479206578697374732e",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1457:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9024ef7eaf1f06fee486e50eb44e29366f01ec28366b06eeaf24c0116fa7d7c3",
																"typeString": "literal_string \"A consent record with this hash already exists.\""
															},
															"value": "A consent record with this hash already exists."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9024ef7eaf1f06fee486e50eb44e29366f01ec28366b06eeaf24c0116fa7d7c3",
																"typeString": "literal_string \"A consent record with this hash already exists.\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1381:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:135:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1381:135:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 54,
															"name": "mapHashConsent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1571:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Consent_$10_storage_$",
																"typeString": "mapping(bytes32 => struct AgreementSmartContract.Consent storage ref)"
															}
														},
														"id": 56,
														"indexExpression": {
															"id": 55,
															"name": "hashOfConsent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1586:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1571:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Consent_$10_storage",
															"typeString": "struct AgreementSmartContract.Consent storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 58,
																"name": "_purposeBlockAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1646:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 59,
																"name": "_purposeHashKeyOfDataUsage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1707:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 60,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "1755:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 61,
																"name": "_isConsented",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1789:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 57,
															"name": "Consent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1603:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Consent_$10_storage_ptr_$",
																"typeString": "type(struct AgreementSmartContract.Consent storage pointer)"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1625:19:0",
															"1680:25:0",
															"1747:6:0",
															"1776:11:0"
														],
														"names": [
															"purposeBlockAddress",
															"purposeHashKeyOfDataUsage",
															"userId",
															"isConsented"
														],
														"nodeType": "FunctionCall",
														"src": "1603:209:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Consent_$10_memory_ptr",
															"typeString": "struct AgreementSmartContract.Consent memory"
														}
													},
													"src": "1571:241:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Consent_$10_storage",
														"typeString": "struct AgreementSmartContract.Consent storage ref"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1571:241:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 66,
															"name": "hashOfConsent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1886:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 65,
														"name": "ConsentAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1873:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "EmitStatement",
												"src": "1868:32:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "hashOfConsent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "1964:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 31,
												"id": 70,
												"nodeType": "Return",
												"src": "1957:20:0"
											}
										]
									},
									"functionSelector": "6f0fa36d",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addConsent",
									"nameLocation": "926:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "_purposeBlockAddress",
												"nameLocation": "954:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "946:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "_purposeHashKeyOfDataUsage",
												"nameLocation": "992:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "984:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "1033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1028:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_isConsented",
												"nameLocation": "1055:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1050:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 26,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:137:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:9:0"
									},
									"scope": 73,
									"src": "917:1067:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 74,
							"src": "58:1928:0",
							"usedErrors": [],
							"usedEvents": [
								19
							]
						}
					],
					"src": "32:1955:0"
				},
				"id": 0
			}
		}
	}
}