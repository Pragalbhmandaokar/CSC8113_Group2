{
	"id": "65a84466985dbea0d04ee9cea5b0ead0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AccessControl {\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n     modifier onlyOwner {\n        require(msg.sender == owner, \"Only the contract owner can perform this operation\");\n        _;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AccessControl.sol\":57:301  contract AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AccessControl.sol\":113:162  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/AccessControl.sol\":137:142  owner */\n  0x00\n    /* \"contracts/AccessControl.sol\":137:155  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/AccessControl.sol\":145:155  msg.sender */\n  caller\n    /* \"contracts/AccessControl.sol\":137:155  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/AccessControl.sol\":57:301  contract AccessControl {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AccessControl.sol\":57:301  contract AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AccessControl.sol\":86:106  address public owner */\n    tag_3:\n      sload(0x00)\n      tag_4\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_4:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/AccessControl.sol\":86:106  address public owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa26469706673582212201b491a0ea41be6c32f88bb73298da4807ad1091bc506e1faa8ff0e6637e6090b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b505f80546001600160a01b03191633179055608d8061002c5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80638da5cb5b14602a575b5f80fd5b5f54603b906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f3fea26469706673582212201b491a0ea41be6c32f88bb73298da4807ad1091bc506e1faa8ff0e6637e6090b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x8D DUP1 PUSH2 0x2C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x3B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL BLOBHASH BYTE 0xE LOG4 SHL 0xE6 0xC3 0x2F DUP9 0xBB PUSH20 0x298DA4807AD1091BC506E1FAA8FF0E6637E6090B PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:244:0:-:0;;;113:49;;;;;;;;;-1:-1:-1;137:5:0;:18;;-1:-1:-1;;;;;;137:18:0;145:10;137:18;;;57:244;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:219:1",
										"nodeType": "YulBlock",
										"src": "0:219:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:1",
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:1",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:1",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nativeSrc": "194:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:1",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nativeSrc": "190:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nativeSrc": "178:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:51:1",
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nativeSrc": "160:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c80638da5cb5b14602a575b5f80fd5b5f54603b906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f3fea26469706673582212201b491a0ea41be6c32f88bb73298da4807ad1091bc506e1faa8ff0e6637e6090b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x3B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL BLOBHASH BYTE 0xE LOG4 SHL 0xE6 0xC3 0x2F DUP9 0xBB PUSH20 0x298DA4807AD1091BC506E1FAA8FF0E6637E6090B PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:244:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;86:20;;;;;-1:-1:-1;;;;;86:20:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;86:20:0;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "28200",
								"executionCost": "24313",
								"totalCost": "52513"
							},
							"external": {
								"owner()": "2301"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 301,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 301,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 301,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 113,
									"end": 162,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 137,
									"end": 142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 155,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 137,
									"end": 155,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 145,
									"end": 155,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 155,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 301,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 301,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 301,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 301,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 301,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b491a0ea41be6c32f88bb73298da4807ad1091bc506e1faa8ff0e6637e6090b64736f6c63430008180033",
									".code": [
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 301,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "RETURN",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/AccessControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AccessControl.sol\":{\"keccak256\":\"0xdfdcf8b60f0514ab6840939fe3637ebe36764180a9563fb5587fc2f4a8d71935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13d9fbbb25926ed11f3d043d2fc1c5ce98f264aeb330356a25cd86e3279fc43c\",\"dweb:/ipfs/QmQnGDgLmvzNrNTDGM5HpgNdDcqG8PBRdCBaQ8H7EwfmZn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/AccessControl.sol:AccessControl",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/AccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							25
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "AccessControl",
							"nameLocation": "66:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "101:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "86:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "127:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "137:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "145:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "149:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "145:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "137:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "137:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "127:0:0"
									},
									"scope": 25,
									"src": "113:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "188:110:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "206:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "210:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "206:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "206:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e65722063616e20706572666f726d2074686973206f7065726174696f6e",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "227:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_748852c48ee2c934be655436cd445011dcadf3cf6f6eb5ee87f6e2b2c5dbe041",
																"typeString": "literal_string \"Only the contract owner can perform this operation\""
															},
															"value": "Only the contract owner can perform this operation"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_748852c48ee2c934be655436cd445011dcadf3cf6f6eb5ee87f6e2b2c5dbe041",
																"typeString": "literal_string \"Only the contract owner can perform this operation\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "198:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "198:82:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "290:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "178:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:0"
									},
									"src": "169:129:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "57:244:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:269:0"
				},
				"id": 0
			}
		}
	}
}