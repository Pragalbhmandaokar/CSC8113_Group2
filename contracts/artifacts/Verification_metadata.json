{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_dataUsageSmartContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_agreementSmartContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_logSmartContractAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_actor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_serviceName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_servicePurpose",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_violationMessage",
						"type": "string"
					}
				],
				"name": "ActorFlaggedAsViolator",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getViolators",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "verifyCompliance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getViolators()": {
					"notice": "In the revised verifyCompliance function: 1 - It first fetches the keys for logs and consents. 2 - It iterates over the log keys and, within that loop, iterates over the consent keys to find matches. 3 - When a matching key is found, it performs the necessary verifications: - Checks if the consent is given and the actor's ID matches. - Compares the operations and processed personal data between the log and data usage entries. 4 - If any discrepancies are found, it flags the actor as a violator."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Verification.sol": "Verification"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/AccessControl.sol": {
			"keccak256": "0xdfdcf8b60f0514ab6840939fe3637ebe36764180a9563fb5587fc2f4a8d71935",
			"license": "MIT",
			"urls": [
				"bzz-raw://13d9fbbb25926ed11f3d043d2fc1c5ce98f264aeb330356a25cd86e3279fc43c",
				"dweb:/ipfs/QmQnGDgLmvzNrNTDGM5HpgNdDcqG8PBRdCBaQ8H7EwfmZn"
			]
		},
		"contracts/AgreementSmartContract.sol": {
			"keccak256": "0x3ef143411345cc4cd2cf5a3573b3589df31264ba637e8bdbc93e151078efd897",
			"license": "MIT",
			"urls": [
				"bzz-raw://c4a75223005b583908afad3072c36f9fba9e983745160a7932bcb50bdd17c4d3",
				"dweb:/ipfs/QmVscFiUZgB5MGSJa8DvUELA9mVxKRBSFfoVEox2Af2nih"
			]
		},
		"contracts/DataUsageSmartContract.sol": {
			"keccak256": "0x57d64a836ffda049ca22fbb7d776fc9910555131755948498df3f63e01430ec7",
			"license": "MIT",
			"urls": [
				"bzz-raw://114d856d7ff22b15dbc7750900164e7f7aec770314d99caa24710a99d36a0f54",
				"dweb:/ipfs/QmW8kBeY3m4XLMpYUVChzjErD2HZeFok68bUTFoSJtt4EC"
			]
		},
		"contracts/LogSmartContract.sol": {
			"keccak256": "0x970387bc9810c6b40aa2d28df9c9e34badb8657b4440541bfb35fa2269ea0e03",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc5a5254070511a7749c8b3a73aa635e08222d82431920817daf66ea067a5325",
				"dweb:/ipfs/Qmaktiyf81hYg4Rd4qRfha7gazzrSfutRmEa15PbHoZdnZ"
			]
		},
		"contracts/Verification.sol": {
			"keccak256": "0xab87471b8a3deb3bc36ee9c934e10aeb7d20708432a17b343beec7ec98d29337",
			"license": "MIT",
			"urls": [
				"bzz-raw://217f50a024e81311cb6d3a99f21b0c82846e1d5bd2c5aaed6a43057848500124",
				"dweb:/ipfs/Qme8GBKeTXbjDMvam9rqGYRdgTa5EUXtNuuer9DX95arqR"
			]
		}
	},
	"version": 1
}