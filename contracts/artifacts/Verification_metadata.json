{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_dataUsageSmartContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_agreementSmartContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_logSmartContractAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_actor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_serviceName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_servicePurpose",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_violationMessage",
						"type": "string"
					}
				],
				"name": "ActorFlaggedAsViolator",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getViolators",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "verifyCompliance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getViolators()": {
					"notice": "In the revised verifyCompliance function: 1 - It first fetches the keys for logs and consents. 2 - It iterates over the log keys and, within that loop, iterates over the consent keys to find matches. 3 - When a matching key is found, it performs the necessary verifications: - Checks if the consent is given and the actor's ID matches. - Compares the operations and processed personal data between the log and data usage entries. 4 - If any discrepancies are found, it flags the actor as a violator."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Verification.sol": "Verification"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/AccessControl.sol": {
			"keccak256": "0xdfdcf8b60f0514ab6840939fe3637ebe36764180a9563fb5587fc2f4a8d71935",
			"license": "MIT",
			"urls": [
				"bzz-raw://13d9fbbb25926ed11f3d043d2fc1c5ce98f264aeb330356a25cd86e3279fc43c",
				"dweb:/ipfs/QmQnGDgLmvzNrNTDGM5HpgNdDcqG8PBRdCBaQ8H7EwfmZn"
			]
		},
		"contracts/AgreementSmartContract.sol": {
			"keccak256": "0x01705ed40c720b8ffb80a5e0706875fdb4285b701923bbc0ffd04cd4896680ee",
			"license": "MIT",
			"urls": [
				"bzz-raw://d1667d9b22bd9c240e150be115fa6a2264bfc20a6f9455c7e6f7b15cd0c54a54",
				"dweb:/ipfs/QmevrY9EMWa3ZQYvSK4mNrz7SXppSEmyjGA2vDxPViJUAR"
			]
		},
		"contracts/DataUsageSmartContract.sol": {
			"keccak256": "0x260ff210295d72dba42c9620c57f73a2956e9088ac4286344044ae28302b1f29",
			"license": "MIT",
			"urls": [
				"bzz-raw://67ca82dc90c9a91965a657f36421f3edcd406b31e8201bf3fa5ed5abfe3c10da",
				"dweb:/ipfs/QmSNHZDtsJ39wp7rvAeXFesdkLqGzFZx86tJXEyzDJEeow"
			]
		},
		"contracts/LogSmartContract.sol": {
			"keccak256": "0x818465c573e34d76167db016e64f046acaa6ede3ed860cf0764de7d156fb1f3b",
			"license": "MIT",
			"urls": [
				"bzz-raw://154c24c5a15b8eb02d8aebd7b9db5a9e27f1bca7ffe228651988b204d48a0a0f",
				"dweb:/ipfs/QmXWUtSt5E2jeejLfnRjHZ8rVL6hWRDJ3wsAYmqDL6odhz"
			]
		},
		"contracts/Verification.sol": {
			"keccak256": "0x849726faefd63228add4ff786e760d22aa455b617dc5ec6ce967a84f24d66ad0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fadbf17a13b76b6b543cd8a3bfb15195313a5edc9a12d2e8f8d06ada9cd52280",
				"dweb:/ipfs/QmPhhxDPtQScDzpfTkZLPX4Dmn8k6zvXEf81it4bPhcYth"
			]
		}
	},
	"version": 1
}